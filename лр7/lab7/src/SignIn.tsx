import React, { useState} from "react";
import { Link } from "react-router-dom";
import SignUp from './SignUp';
import './SignIn.css';


function SignIn() {

        const[formData, setFormData] = useState({ email:"", password:""});
        const[message, setMessage] = useState("");
        const [showPassword, setShowPassword] = useState(false);
    
        const getUsers = async () => {
            const stored = localStorage.getItem("users");
            return stored ? JSON.parse(stored) : [];
          };

        const handleChange = (e: React.ChangeEvent<HTMLInputElement>) =>{
            setFormData({...formData, [e.target.name]: e.target.value});
        };
    
        const validate = async () => {
            const {email, password} = formData;
            if( !email.trim() || !password.trim()) return "–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ –ø–æ–ª–µ";
            if(!/^[A-Za-z–ê-–Ø–∞-—è0-9\_\-\+\.]+@[A-Za-z–ê-–Ø–∞-—è]+\.[A-Za-z–ê-–Ø–∞-—è]+$/.test(email)) return "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç email";
            if(password.length<8) return "–î–ª–∏–Ω–∞ –ø–∞—Ä–æ–ª—è –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –Ω–µ –º–µ–Ω—å—à–µ 8 —Å–∏–º–≤–æ–ª–æ–≤";
            if(!/[A-Z]/.test(password) || !/[a-z]/.test(password) || !/\d/.test(password)) return "–ü–∞—Ä–æ–ª—å –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –∫–∞–∫ –º–∏–Ω–∏–º—É–º –æ–¥–Ω—É –∑–∞–≥–ª–∞–≤–Ω—É—é –±—É–∫–≤—É, –æ–¥–Ω—É —Å—Ç—Ä–æ—á–Ω—É—é –±—É–∫–≤—É –∏ –æ–¥–Ω—É —Ü–∏—Ñ—Ä—É";
            if(/\s/.test(password)) return "–ü–∞—Ä–æ–ª—å –Ω–µ –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –ø—Ä–æ–±–µ–ª—ã";
            
            const users = await getUsers();
            const userExists = users.find((user: typeof formData) => user.email === email);
            if (!userExists) return "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ç–∞–∫–∏–º email –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω";
            
            if(userExists.password!=password) return "–ù–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å"
            return "";
        };

        const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {
                e.preventDefault();
                const error = await validate();
                if(error){
                    setMessage(error);
                }
                else{
                    setMessage("–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ");
                }
            };

  return (
    <div className="main">
        {message && <p className="error">{message}</p>}
        <h1>–í—Ö–æ–¥</h1>
        <p>–ß–µ—Ä–µ–∑ —Å–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–µ—Ç–∏</p>
        <div  className="socials">
            <img src="/facebook.png"/>
            <img src="/vk.png"/>
            <img src="/google.png"/>
        </div>
        <p>–∏–ª–∏ —á–µ—Ä–µ–∑ –Ω–∏–∫, e-mail</p>
        <form onSubmit={handleSubmit}>
            <input name="email" type="text" value={formData.email} onChange={handleChange} required placeholder="–ù–∏–∫ –∏–ª–∏ e-mail"/>
            <div className="password-wrapper">
                <input name="password" type={showPassword ? "text" : "password"} value={formData.password} onChange={handleChange} required placeholder="–ü–∞—Ä–æ–ª—å"/>
                <span className="toggle-password" onClick={() => setShowPassword(!showPassword)}>
                {showPassword ? "üôà" : "üëÅÔ∏è"}
          </span>
          </div>
            <button>–í–æ–π—Ç–∏</button>
        </form>
        <Link to="/sign-up">–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è</Link>
        <Link to="/reset-password">–Ø –Ω–µ –ø–æ–º–Ω—é –ø–∞—Ä–æ–ª—å</Link>
    </div>
  );
}

export default SignIn;
