import React, { useState } from "react";
import { Link, Outlet } from "react-router-dom";

import './SignIn.css';


function SignUp() {
    const[formData, setFormData] = useState({name:"", email:"", password:"", confirmPassword:""});
    const[message, setMessage] = useState("");
    const [showPassword, setShowPassword] = useState(false);
    const [showConfirmPassword, setShowConfirmPassword] = useState(false);

    const handleChange = (e: React.ChangeEvent<HTMLInputElement>) =>{
        setFormData({...formData, [e.target.name]: e.target.value});
    };

    const getUsers = async () => {
        const stored = localStorage.getItem("users");
        return stored ? JSON.parse(stored) : [];
      };
      
      const saveUser = async (user: typeof formData) => {
        const users = await getUsers();
        users.push(user);
        localStorage.setItem("users", JSON.stringify(users));
      };

    const validate = async () => {
        const {name, email, password, confirmPassword} = formData;
        if(!name.trim()) return "–ò–º—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –ø–æ–ª–µ";
        if(!email.trim()) return "E-mail –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –ø–æ–ª–µ";
        if(!password.trim()) return "–ü–∞—Ä–æ–ª—å –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –ø–æ–ª–µ";
        if(!confirmPassword.trim()) return "–ü–æ–≤—Ç–æ—Ä –ø–∞—Ä–æ–ª—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –ø–æ–ª–µ";
        
        if(!/^[–ê-–Ø–∞-—èA-Za-z\s]{2,50}$/.test(name)) return "–ò–º—è –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ç–æ–ª—å–∫–æ –±—É–∫–≤—ã, –æ—Ç 2 –¥–æ 50 —Å–∏–º–≤–æ–ª–æ–≤";

        if(!/^[A-Za-z–ê-–Ø–∞-—è0-9\_\-\+\.]+@[A-Za-z–ê-–Ø–∞-—è]+\.[A-Za-z–ê-–Ø–∞-—è]+$/.test(email)) return "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç email";
        
        if(password.length<8) return "–î–ª–∏–Ω–∞ –ø–∞—Ä–æ–ª—è –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –Ω–µ –º–µ–Ω—å—à–µ 8 —Å–∏–º–≤–æ–ª–æ–≤";
        if(!/[A-Z]/.test(password) || !/[a-z]/.test(password) || !/\d/.test(password)) return "–ü–∞—Ä–æ–ª—å –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –∫–∞–∫ –º–∏–Ω–∏–º—É–º –æ–¥–Ω—É –∑–∞–≥–ª–∞–≤–Ω—É—é –±—É–∫–≤—É, –æ–¥–Ω—É —Å—Ç—Ä–æ—á–Ω—É—é –±—É–∫–≤—É –∏ –æ–¥–Ω—É —Ü–∏—Ñ—Ä—É";
        if(/\s/.test(password)) return "–ü–∞—Ä–æ–ª—å –Ω–µ –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –ø—Ä–æ–±–µ–ª—ã";
        
        if(password !== confirmPassword) return "–ü–∞—Ä–æ–ª–∏ –Ω–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç";

        const users = await getUsers();
        const emailExists = users.some((user: typeof formData) => user.email === email);
        if (emailExists) return "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ç–∞–∫–∏–º email —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω";

        return "";
    };

    const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {
        e.preventDefault();
        const error = await validate();
        if(error){
            setMessage(error);
        }
        else{
            await saveUser(formData);
            setMessage("–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ");
        }
    };



  return (
    <div className="main">
        {message && <p className="error">{message}</p>}
        <h1>–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è</h1>
        <p>–ß–µ—Ä–µ–∑ —Å–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–µ—Ç–∏</p>
        <div className="socials">
            <img src="/facebook.png"/>
            <img src="/vk.png"/>
            <img src="/google.png"/>
        </div>
        <p>–∏–ª–∏ —á–µ—Ä–µ–∑ –Ω–∏–∫, e-mail</p>
        
        <form onSubmit={handleSubmit}>
            <input name="name" type="text" required placeholder="–ò–º—è" value={formData.name} onChange={handleChange}/>
            <input name="email" type="text" required placeholder="E-mail" value={formData.email} onChange={handleChange}/>
            <div className="password-wrapper">
            <input name="password" type={showPassword ? "text" : "password"} required placeholder="–ü–∞—Ä–æ–ª—å" value={formData.password} onChange={handleChange }/>
            <span className="toggle-password" onClick={() => setShowPassword(!showPassword)}>
                {showPassword ? "üôà" : "üëÅÔ∏è"}
                </span>
            </div>
            <div className="password-wrapper">
            <input name="confirmPassword" type={showConfirmPassword ? "text" : "password"} required placeholder="–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–∞—Ä–æ–ª—è" value={formData.confirmPassword} onChange={handleChange}/>
            <span className="toggle-password" onClick={() => setShowConfirmPassword(!showConfirmPassword)}>
                {showConfirmPassword ? "üôà" : "üëÅÔ∏è"}
                </span>
            </div>
            <button>–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è</button>
        </form>
        <Link to="/sign-in">–í–æ–π—Ç–∏</Link>
        <Link to="/reset-password">–Ø –Ω–µ –ø–æ–º–Ω—é –ø–∞—Ä–æ–ª—å</Link>
        <Outlet/>
    </div>
  );
}

export default SignUp;
